// Test location extraction
const testCases = [
  "Bostancƒ± final okullarƒ±nda kahvaltƒ± - 09:30",
  "Memorial Hastanesi'nde randevu saat 14:00",
  "Kadƒ±k√∂y'de alƒ±≈üveri≈ü yapacaƒüƒ±m",
  "Starbucks'ta toplantƒ± var",
  "ƒ∞stanbul Havalimanƒ±'nda bulu≈üma",
  "Zorlu Center'da konser",
  "Ata≈üehir Metropol ƒ∞stanbul'da toplantƒ±"
];

// Simulate what the AI should extract
testCases.forEach(test => {
  console.log("\nüìù Input:", test);
  
  // Check for location patterns
  const locationPatterns = [
    /([A-Z√áƒûƒ∞√ñ≈û√ú][a-z√ßƒüƒ±√∂≈ü√º]+(?:\s+[A-Z√áƒûƒ∞√ñ≈û√ú][a-z√ßƒüƒ±√∂≈ü√º]+)*(?:'[dDtTnN]?[aAeE])?)/g,
    /\b(?:okul|hastane|havalimanƒ±|center|mall|park|plaza|tower)\w*/gi
  ];
  
  let locations = [];
  locationPatterns.forEach(pattern => {
    const matches = test.match(pattern);
    if (matches) {
      locations.push(...matches);
    }
  });
  
  // Filter and clean
  const knownLocations = [
    "Bostancƒ±", "final okullarƒ±", "Memorial Hastanesi",
    "Kadƒ±k√∂y", "Starbucks", "ƒ∞stanbul Havalimanƒ±",
    "Zorlu Center", "Ata≈üehir", "Metropol ƒ∞stanbul"
  ];
  
  const detectedLocation = locations.find(loc => 
    knownLocations.some(known => 
      loc.toLowerCase().includes(known.toLowerCase()) ||
      known.toLowerCase().includes(loc.toLowerCase())
    )
  );
  
  console.log("üìç Detected Location:", detectedLocation || "NONE");
  console.log("‚úÖ Expected fields:");
  console.log("  - location:", detectedLocation);
  console.log("  - destination:", detectedLocation);
  console.log("  - requiresRouting:", !!detectedLocation);
});